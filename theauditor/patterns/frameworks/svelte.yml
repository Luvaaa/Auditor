# Svelte and SvelteKit-specific security patterns
patterns:
  - name: "svelte-html-tag-xss"
    description: "Use of {@html} tag - can lead to XSS if the rendered expression originates from untrusted source"
    regex: "\\{@html\\s+"
    languages: ["javascript", "typescript"]
    severity: "high"
    
  - name: "sveltekit-open-redirect"
    description: "redirect() calls that may use unvalidated user input - creates open redirect vulnerability"
    regex: "redirect\\s*\\([^)]*(?:url\\.searchParams|params|request\\.url)"
    languages: ["javascript", "typescript"]
    severity: "medium"
    
  - name: "sveltekit-server-load-ssrf"
    description: "fetch() in server load functions using user-controlled input - creates SSRF risk"
    regex: "(?:export\\s+(?:async\\s+)?function\\s+load|export\\s+const\\s+load)[^}]*fetch\\s*\\([^)]*(?:params|url\\.|request\\.)"
    languages: ["javascript", "typescript"]
    severity: "high"
    
  - name: "svelte-exposed-api-keys"
    description: "Exposed API keys in Svelte/SvelteKit code - sensitive data in client bundle"
    regex: "(?:const|let|var)\\s+(?:PUBLIC_|VITE_)[A-Z_]*(?:KEY|TOKEN|SECRET|PASSWORD|API)[A-Z_]*\\s*=\\s*['\"`](?:pk_|sk_|api_|key_|token_|secret_)[^'\"`]+"
    languages: ["javascript", "typescript"]
    severity: "high"
    
  - name: "svelte-eval-usage"
    description: "Using eval in Svelte components - code injection vulnerability"
    regex: "(?:<script[^>]*>|export\\s+(?:async\\s+)?function)[^}]*eval\\s*\\("
    languages: ["javascript", "typescript"]
    severity: "critical"
    
  - name: "svelte-bind-innerHTML"
    description: "Using bind:innerHTML with user input - XSS vulnerability"
    regex: "bind:innerHTML\\s*="
    languages: ["javascript", "typescript"]
    severity: "high"
    
  - name: "svelte-unsafe-target-blank"
    description: "External link without rel='noopener' - reverse tabnabbing vulnerability"
    regex: "target\\s*=\\s*['\"`]_blank['\"`](?!.*rel\\s*=\\s*['\"`](?:noopener|noreferrer))"
    languages: ["javascript", "typescript"]
    severity: "medium"
    
  - name: "svelte-direct-dom-manipulation"
    description: "Direct DOM manipulation bypassing Svelte's reactivity - potential security issue"
    regex: "(?:document\\.(?:getElementById|querySelector)[^)]*\\)|node|element)\\.innerHTML\\s*="
    languages: ["javascript", "typescript"]
    severity: "high"
    
  - name: "sveltekit-missing-csrf"
    description: "Form submission without CSRF protection in SvelteKit"
    regex: "<form[^>]*method\\s*=\\s*['\"`](?:POST|PUT|DELETE)['\"`](?!.*(?:csrf|enhance))"
    languages: ["javascript", "typescript"]
    severity: "high"
    
  - name: "svelte-hardcoded-credentials"
    description: "Hardcoded credentials in Svelte components"
    regex: "(?:password|apiKey|secret|token)\\s*[:=]\\s*['\"`](?!\\$env)[^'\"`]{8,}['\"`]"
    languages: ["javascript", "typescript"]
    severity: "critical"
    
  - name: "sveltekit-env-import"
    description: "Importing private env vars in client code - exposes secrets to browser"
    regex: "\\$env/static/private|\\$env/dynamic/private"
    languages: ["javascript", "typescript"]
    severity: "critical"
    
  - name: "svelte-unescaped-user-input"
    description: "User input rendered without escaping - potential XSS"
    regex: "\\{[^}]*(?:user|input|data|params|query|body|formData)\\.[^}]+\\}"
    languages: ["javascript", "typescript"]
    severity: "medium"
    
  - name: "sveltekit-unsafe-set-cookie"
    description: "Setting cookies without secure flags - session hijacking risk"
    regex: "cookies\\.set\\s*\\([^)]*\\)(?!.*(?:httpOnly|secure|sameSite))"
    languages: ["javascript", "typescript"]
    severity: "high"
    
  - name: "svelte-store-injection"
    description: "Direct store updates with user input - potential state injection"
    regex: "(?:writable|readable|derived)\\s*\\([^)]*(?:user|input|params|query)"
    languages: ["javascript", "typescript"]
    severity: "medium"
