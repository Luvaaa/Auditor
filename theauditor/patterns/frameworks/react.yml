# React-specific security patterns
patterns:
  - name: "react-dangerous-html"
    description: "Use of dangerouslySetInnerHTML - primary XSS vector in React"
    regex: "dangerouslySetInnerHTML\\s*=\\s*\\{\\{"
    languages: ["javascript", "typescript"]
    severity: "high"
    
  - name: "react-exposed-api-keys"
    description: "Exposed API keys in frontend code - sensitive data in client bundle"
    regex: "(?:const|let|var)\\s+(?:REACT_APP_|NEXT_PUBLIC_|VITE_|GATSBY_)[A-Z_]*(?:KEY|TOKEN|SECRET|PASSWORD|API|PRIVATE|CREDENTIAL|AUTH)[A-Z_]*\\s*=\\s*['\"`](?:pk_|sk_|api_|key_|token_|secret_|bearer_|Basic\\s+|ghp_|ghs_|xox[baprs]-|AKIA|eyJ)[^'\"`]+"
    languages: ["javascript", "typescript"]
    severity: "high"
    
  - name: "react-eval-jsx"
    description: "Using eval with JSX - code injection vulnerability"
    regex: "eval\\s*\\([^)]*\\).*(?:<[A-Z]|jsx|JSX)"
    languages: ["javascript", "typescript"]
    severity: "critical"
    
  - name: "react-unsafe-target-blank"
    description: "External link without rel='noopener' - reverse tabnabbing vulnerability"
    regex: "target\\s*=\\s*['\"`]_blank['\"`](?!.*rel\\s*=\\s*['\"`](?:noopener|noreferrer))"
    languages: ["javascript", "typescript"]
    severity: "medium"
    
  - name: "react-direct-innerhtml"
    description: "Direct innerHTML manipulation in React components"
    regex: "(?:ref\\.current\\.|document\\.(?:getElementById|querySelector)[^)]*\\)\\.?)innerHTML\\s*="
    languages: ["javascript", "typescript"]
    severity: "high"
    
  - name: "react-unescaped-user-input"
    description: "User input rendered directly in JSX without escaping - potential XSS"
    regex: "(?:return\\s*\\(|=>\\s*\\(|JSX\\.Element|<[A-Z][^>]*>)[^}]*\\{[^}]*(?:props\\.(?:user|input|data)|location\\.search|params\\.|query\\.|formData\\.|request\\.body)[^}]*\\}(?:(?!sanitize|escape|DOMPurify|xss|clean|safe).)*?(?:</|/>)"
    languages: ["javascript", "typescript"]
    severity: "high"
    
  - name: "react-missing-csrf"
    description: "Form submission without CSRF token"
    regex: "<form[^>]*method\\s*=\\s*['\"`](?:POST|PUT|DELETE)['\"`](?!.*csrf)"
    languages: ["javascript", "typescript"]
    severity: "high"
    
  - name: "react-hardcoded-credentials"
    description: "Hardcoded credentials in React component"
    regex: "(?:password|apiKey|api_key|secret|token|privateKey|private_key|auth|credential)\\s*[:=]\\s*['\"`](?!\\$\\{|process\\.env|import\\.meta\\.env)[^'\"`]{8,}['\"`]"
    languages: ["javascript", "typescript"]
    severity: "critical"
